package analizadores; 
import java_cup.runtime.*;

parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
:} 

terminal String t_numero,t_cadena,t_boolean,t_caracter;
terminal String mas, menos, por, dividido,potencia, corcheteAbre, corcheteCierra, mod, parentesisAbre, parentesisCierra;
terminal string mayor, menor, mayorIgual, menorIgual, esIgual, esDifetente;
terminal String or, and, not;
terminal String inicio, fin;
terminal String comentarioSimple, comentarioMultiple;
terminal String ingresar, como, conValor, puntoycoma, coma, variable;
terminal String flecha;
terminal String si, entonses, finSi, deLoContraro, oSi;
terminal String segun, interrogacionAbre, interrogacionCierra, finSegun;
terminal String para, hasta, hacer, incremental, finPara;
terminal String mientras, finMientras;
terminal String repetir, hastaQue;
terminal String retornar;
terminal String metodo, finMetodo, conParametros;
terminal String funcion, finFuncion;
terminal String ejecutar;
terminal String imprimir, imprimirNl;
terminal String entero, decimal, cadena, booleano, caracter;

non terminal INICIO;
non terminal INSTRUCCIONES;
non terminal INSTRUCCION;
non terminal Double EXPRESION;

precedence left mas, menos;
precedence left por, dividido;


start with INICIO; 

INICIO::=INSTRUCCIONES;

INSTRUCCIONES ::= 
   INSTRUCCION INSTRUCCIONES
 | INSTRUCCION
 | error INSTRUCCIONES
; 

INSTRUCCION ::= 
   EXPRESION:a{:System.out.println("El valor de la expresión es: "+a);:}
;

EXPRESION  ::=  
    EXPRESION:a mas        EXPRESION:b     {:RESULT=a+b;:}
 |  EXPRESION:a menos      EXPRESION:b     {:RESULT=a-b;:}
 |  EXPRESION:a por        EXPRESION:b     {:RESULT=a*b;:}
 |  EXPRESION:a dividido   EXPRESION:b     {:RESULT=a/b;:}
 |  entero:a                               {:RESULT=new Double(a);:}
 |  decimal:a                              {:RESULT=new Double(a);:}
 |  parentesisAbre EXPRESION:a parentesisCierra              {:RESULT=a;:}
;